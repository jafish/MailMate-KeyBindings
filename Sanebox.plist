{
	// Move messages into appropriate sane folders
	// Setup Instructions (beyond setting these keybindings in Mailmate...):
	// 1. In the archive folder for each account, create rules that move the message to the appropriate sanebox "snooze" folder based on the flag color
	// 2. I think that's it? Current sanebox "snooze" folders are Sane4Hours, SaneTomorrow, Sane3Days, SaneNextWeek

	// Set the flag to green and archive the message (a smart mailbox and rule processes it further into appropriate SaneBox folder - "Delay Level" 1)
	"^1" = ( "setTag:", "\\Flagged", "setTag:", "$MailFlagBit0", "setTag:", "$MailFlagBit1", "removeTag:", "$MailFlagBit2", "archive:");

	// Set the flag to blue and archive the message (a smart mailbox and rule processes it further into appropriate SaneBox folder - "Delay Level" 2)
	"^2" = ( "setTag:", "\\Flagged", "removeTag:", "$MailFlagBit0", "removeTag:", "$MailFlagBit1", "setTag:", "$MailFlagBit2", "archive:");
	
	// Set the flag to purple and archive the message (a smart mailbox and rule processes it further into appropriate SaneBox folder - "Delay Level" 3)
	"^3" = ( "setTag:", "\\Flagged", "setTag:", "$MailFlagBit0", "removeTag:", "$MailFlagBit1", "setTag:", "$MailFlagBit2", "archive:");
	
	// Set the flag to gray and archive the message (a smart mailbox and rule processes it further into appropriate SaneBox folder - "Delay Level" 4)
	"^4" = ( "setTag:", "\\Flagged", "removeTag:", "$MailFlagBit0", "setTag:", "$MailFlagBit1", "setTag:", "$MailFlagBit2", "archive:");
	
	// "Return" message to the appropriate inbox
	"^0" = ( "moveToMailbox:", "inbox" );
	
	// Train Spam
	"s" = {
		"g" = ("moveToMailbox:", "/TrainGood");
		"s" = ("moveToMailbox:", "/TrainSpam");	
	};
	
	"^a" = ("archive:");
	
	
	"0" = ("makeFirstResponder:", "mainOutline"); // move focus to message list 
	"9" = ("makeFirstResponder:", "messageView"); // move focus to message view (for scrolling with arrows) 
	"n" = ("makeFirstResponder:", "mainOutline", "nextUnreadMessage:"); // move focus to message list, select next unread message
}